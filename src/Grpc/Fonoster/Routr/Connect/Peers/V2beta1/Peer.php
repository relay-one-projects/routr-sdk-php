<?php

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/peers.proto

namespace Fonoster\Routr\Connect\Peers\V2beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The message for the Peer resource
 *
 * Generated from protobuf message <code>fonoster.routr.connect.peers.v2beta1.Peer</code>
 */
class Peer extends \Google\Protobuf\Internal\Message
{
    /**
     * The API version of the Peer
     *
     * Generated from protobuf field <code>string api_version = 1 [json_name = "apiVersion"];</code>
     */
    protected $api_version = '';
    /**
     * The unique identifier of the Peer
     *
     * Generated from protobuf field <code>string ref = 2 [json_name = "ref"];</code>
     */
    protected $ref = '';
    /**
     * The name of the Peer
     *
     * Generated from protobuf field <code>string name = 3 [json_name = "name"];</code>
     */
    protected $name = '';
    /**
     * The username of the Peer
     *
     * Generated from protobuf field <code>string username = 4 [json_name = "username"];</code>
     */
    protected $username = '';
    /**
     * The address of record of the Peer
     *
     * Generated from protobuf field <code>string aor = 5 [json_name = "aor"];</code>
     */
    protected $aor = '';
    /**
     * The contact address of the Peer
     *
     * Generated from protobuf field <code>string contact_addr = 6 [json_name = "contactAddr"];</code>
     */
    protected $contact_addr = '';
    /**
     * The load balancing algorithm of the Peer
     *
     * Generated from protobuf field <code>.fonoster.routr.connect.peers.v2beta1.LoadBalancingAlgorithm balancing_algorithm = 7 [json_name = "balancingAlgorithm"];</code>
     */
    protected $balancing_algorithm = 0;
    /**
     * The session affinity of the Peer
     *
     * Generated from protobuf field <code>bool with_session_affinity = 8 [json_name = "withSessionAffinity"];</code>
     */
    protected $with_session_affinity = false;
    /**
     * The status of the Peer
     *
     * Generated from protobuf field <code>bool enabled = 9 [json_name = "enabled"];</code>
     */
    protected $enabled = false;
    /**
     * The date and time when the Peer was created
     *
     * Generated from protobuf field <code>int32 created_at = 10 [json_name = "createdAt"];</code>
     */
    protected $created_at = 0;
    /**
     * The date and time when the Peer was last updated
     *
     * Generated from protobuf field <code>int32 updated_at = 11 [json_name = "updatedAt"];</code>
     */
    protected $updated_at = 0;
    /**
     * The list of IP addresses that are allowed to access the Peer
     *
     * Generated from protobuf field <code>.fonoster.routr.connect.acl.v2beta1.AccessControlList access_control_list = 12 [json_name = "accessControlList"];</code>
     */
    protected $access_control_list = null;
    /**
     * The credentials of the Peer
     *
     * Generated from protobuf field <code>.fonoster.routr.connect.credentials.v2beta1.Credentials credentials = 13 [json_name = "credentials"];</code>
     */
    protected $credentials = null;
    /**
     * The maximum number of contacts that can be created for this Peer
     *
     * Generated from protobuf field <code>int32 max_contacts = 15 [json_name = "maxContacts"];</code>
     */
    protected $max_contacts = 0;
    /**
     * Value to override the expires requested by the Peer
     *
     * Generated from protobuf field <code>int32 expires = 16 [json_name = "expires"];</code>
     */
    protected $expires = 0;
    /**
     * The extended attributes of the Peer
     *
     * Generated from protobuf field <code>.google.protobuf.Struct extended = 14 [json_name = "extended"];</code>
     */
    protected $extended = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $api_version
     *           The API version of the Peer
     *     @type string $ref
     *           The unique identifier of the Peer
     *     @type string $name
     *           The name of the Peer
     *     @type string $username
     *           The username of the Peer
     *     @type string $aor
     *           The address of record of the Peer
     *     @type string $contact_addr
     *           The contact address of the Peer
     *     @type int $balancing_algorithm
     *           The load balancing algorithm of the Peer
     *     @type bool $with_session_affinity
     *           The session affinity of the Peer
     *     @type bool $enabled
     *           The status of the Peer
     *     @type int $created_at
     *           The date and time when the Peer was created
     *     @type int $updated_at
     *           The date and time when the Peer was last updated
     *     @type \Fonoster\Routr\Connect\Acl\V2beta1\AccessControlList $access_control_list
     *           The list of IP addresses that are allowed to access the Peer
     *     @type \Fonoster\Routr\Connect\Credentials\V2beta1\Credentials $credentials
     *           The credentials of the Peer
     *     @type int $max_contacts
     *           The maximum number of contacts that can be created for this Peer
     *     @type int $expires
     *           Value to override the expires requested by the Peer
     *     @type \Google\Protobuf\Struct $extended
     *           The extended attributes of the Peer
     * }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\Proto\Peers::initOnce();
        parent::__construct($data);
    }

    /**
     * The API version of the Peer
     *
     * Generated from protobuf field <code>string api_version = 1 [json_name = "apiVersion"];</code>
     *
     * @return string
     */
    public function getApiVersion()
    {
        return $this->api_version;
    }

    /**
     * The API version of the Peer
     *
     * Generated from protobuf field <code>string api_version = 1 [json_name = "apiVersion"];</code>
     *
     * @param  string $var
     * @return $this
     */
    public function setApiVersion($var)
    {
        GPBUtil::checkString($var, true);
        $this->api_version = $var;

        return $this;
    }

    /**
     * The unique identifier of the Peer
     *
     * Generated from protobuf field <code>string ref = 2 [json_name = "ref"];</code>
     *
     * @return string
     */
    public function getRef()
    {
        return $this->ref;
    }

    /**
     * The unique identifier of the Peer
     *
     * Generated from protobuf field <code>string ref = 2 [json_name = "ref"];</code>
     *
     * @param  string $var
     * @return $this
     */
    public function setRef($var)
    {
        GPBUtil::checkString($var, true);
        $this->ref = $var;

        return $this;
    }

    /**
     * The name of the Peer
     *
     * Generated from protobuf field <code>string name = 3 [json_name = "name"];</code>
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * The name of the Peer
     *
     * Generated from protobuf field <code>string name = 3 [json_name = "name"];</code>
     *
     * @param  string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, true);
        $this->name = $var;

        return $this;
    }

    /**
     * The username of the Peer
     *
     * Generated from protobuf field <code>string username = 4 [json_name = "username"];</code>
     *
     * @return string
     */
    public function getUsername()
    {
        return $this->username;
    }

    /**
     * The username of the Peer
     *
     * Generated from protobuf field <code>string username = 4 [json_name = "username"];</code>
     *
     * @param  string $var
     * @return $this
     */
    public function setUsername($var)
    {
        GPBUtil::checkString($var, true);
        $this->username = $var;

        return $this;
    }

    /**
     * The address of record of the Peer
     *
     * Generated from protobuf field <code>string aor = 5 [json_name = "aor"];</code>
     *
     * @return string
     */
    public function getAor()
    {
        return $this->aor;
    }

    /**
     * The address of record of the Peer
     *
     * Generated from protobuf field <code>string aor = 5 [json_name = "aor"];</code>
     *
     * @param  string $var
     * @return $this
     */
    public function setAor($var)
    {
        GPBUtil::checkString($var, true);
        $this->aor = $var;

        return $this;
    }

    /**
     * The contact address of the Peer
     *
     * Generated from protobuf field <code>string contact_addr = 6 [json_name = "contactAddr"];</code>
     *
     * @return string
     */
    public function getContactAddr()
    {
        return $this->contact_addr;
    }

    /**
     * The contact address of the Peer
     *
     * Generated from protobuf field <code>string contact_addr = 6 [json_name = "contactAddr"];</code>
     *
     * @param  string $var
     * @return $this
     */
    public function setContactAddr($var)
    {
        GPBUtil::checkString($var, true);
        $this->contact_addr = $var;

        return $this;
    }

    /**
     * The load balancing algorithm of the Peer
     *
     * Generated from protobuf field <code>.fonoster.routr.connect.peers.v2beta1.LoadBalancingAlgorithm balancing_algorithm = 7 [json_name = "balancingAlgorithm"];</code>
     *
     * @return integer
     */
    public function getBalancingAlgorithm()
    {
        return $this->balancing_algorithm;
    }

    /**
     * The load balancing algorithm of the Peer
     *
     * Generated from protobuf field <code>.fonoster.routr.connect.peers.v2beta1.LoadBalancingAlgorithm balancing_algorithm = 7 [json_name = "balancingAlgorithm"];</code>
     *
     * @param  integer $var
     * @return $this
     */
    public function setBalancingAlgorithm($var)
    {
        GPBUtil::checkEnum($var, \Fonoster\Routr\Connect\Peers\V2beta1\LoadBalancingAlgorithm::class);
        $this->balancing_algorithm = $var;

        return $this;
    }

    /**
     * The session affinity of the Peer
     *
     * Generated from protobuf field <code>bool with_session_affinity = 8 [json_name = "withSessionAffinity"];</code>
     *
     * @return boolean
     */
    public function getWithSessionAffinity()
    {
        return $this->with_session_affinity;
    }

    /**
     * The session affinity of the Peer
     *
     * Generated from protobuf field <code>bool with_session_affinity = 8 [json_name = "withSessionAffinity"];</code>
     *
     * @param  boolean $var
     * @return $this
     */
    public function setWithSessionAffinity($var)
    {
        GPBUtil::checkBool($var);
        $this->with_session_affinity = $var;

        return $this;
    }

    /**
     * The status of the Peer
     *
     * Generated from protobuf field <code>bool enabled = 9 [json_name = "enabled"];</code>
     *
     * @return boolean
     */
    public function getEnabled()
    {
        return $this->enabled;
    }

    /**
     * The status of the Peer
     *
     * Generated from protobuf field <code>bool enabled = 9 [json_name = "enabled"];</code>
     *
     * @param  boolean $var
     * @return $this
     */
    public function setEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->enabled = $var;

        return $this;
    }

    /**
     * The date and time when the Peer was created
     *
     * Generated from protobuf field <code>int32 created_at = 10 [json_name = "createdAt"];</code>
     *
     * @return integer
     */
    public function getCreatedAt()
    {
        return $this->created_at;
    }

    /**
     * The date and time when the Peer was created
     *
     * Generated from protobuf field <code>int32 created_at = 10 [json_name = "createdAt"];</code>
     *
     * @param  integer $var
     * @return $this
     */
    public function setCreatedAt($var)
    {
        GPBUtil::checkInt32($var);
        $this->created_at = $var;

        return $this;
    }

    /**
     * The date and time when the Peer was last updated
     *
     * Generated from protobuf field <code>int32 updated_at = 11 [json_name = "updatedAt"];</code>
     *
     * @return integer
     */
    public function getUpdatedAt()
    {
        return $this->updated_at;
    }

    /**
     * The date and time when the Peer was last updated
     *
     * Generated from protobuf field <code>int32 updated_at = 11 [json_name = "updatedAt"];</code>
     *
     * @param  integer $var
     * @return $this
     */
    public function setUpdatedAt($var)
    {
        GPBUtil::checkInt32($var);
        $this->updated_at = $var;

        return $this;
    }

    /**
     * The list of IP addresses that are allowed to access the Peer
     *
     * Generated from protobuf field <code>.fonoster.routr.connect.acl.v2beta1.AccessControlList access_control_list = 12 [json_name = "accessControlList"];</code>
     *
     * @return \Fonoster\Routr\Connect\Acl\V2beta1\AccessControlList|null
     */
    public function getAccessControlList()
    {
        return $this->access_control_list;
    }

    public function hasAccessControlList()
    {
        return isset($this->access_control_list);
    }

    public function clearAccessControlList()
    {
        unset($this->access_control_list);
    }

    /**
     * The list of IP addresses that are allowed to access the Peer
     *
     * Generated from protobuf field <code>.fonoster.routr.connect.acl.v2beta1.AccessControlList access_control_list = 12 [json_name = "accessControlList"];</code>
     *
     * @param  \Fonoster\Routr\Connect\Acl\V2beta1\AccessControlList $var
     * @return $this
     */
    public function setAccessControlList($var)
    {
        GPBUtil::checkMessage($var, \Fonoster\Routr\Connect\Acl\V2beta1\AccessControlList::class);
        $this->access_control_list = $var;

        return $this;
    }

    /**
     * The credentials of the Peer
     *
     * Generated from protobuf field <code>.fonoster.routr.connect.credentials.v2beta1.Credentials credentials = 13 [json_name = "credentials"];</code>
     *
     * @return \Fonoster\Routr\Connect\Credentials\V2beta1\Credentials|null
     */
    public function getCredentials()
    {
        return $this->credentials;
    }

    public function hasCredentials()
    {
        return isset($this->credentials);
    }

    public function clearCredentials()
    {
        unset($this->credentials);
    }

    /**
     * The credentials of the Peer
     *
     * Generated from protobuf field <code>.fonoster.routr.connect.credentials.v2beta1.Credentials credentials = 13 [json_name = "credentials"];</code>
     *
     * @param  \Fonoster\Routr\Connect\Credentials\V2beta1\Credentials $var
     * @return $this
     */
    public function setCredentials($var)
    {
        GPBUtil::checkMessage($var, \Fonoster\Routr\Connect\Credentials\V2beta1\Credentials::class);
        $this->credentials = $var;

        return $this;
    }

    /**
     * The maximum number of contacts that can be created for this Peer
     *
     * Generated from protobuf field <code>int32 max_contacts = 15 [json_name = "maxContacts"];</code>
     *
     * @return integer
     */
    public function getMaxContacts()
    {
        return $this->max_contacts;
    }

    /**
     * The maximum number of contacts that can be created for this Peer
     *
     * Generated from protobuf field <code>int32 max_contacts = 15 [json_name = "maxContacts"];</code>
     *
     * @param  integer $var
     * @return $this
     */
    public function setMaxContacts($var)
    {
        GPBUtil::checkInt32($var);
        $this->max_contacts = $var;

        return $this;
    }

    /**
     * Value to override the expires requested by the Peer
     *
     * Generated from protobuf field <code>int32 expires = 16 [json_name = "expires"];</code>
     *
     * @return integer
     */
    public function getExpires()
    {
        return $this->expires;
    }

    /**
     * Value to override the expires requested by the Peer
     *
     * Generated from protobuf field <code>int32 expires = 16 [json_name = "expires"];</code>
     *
     * @param  integer $var
     * @return $this
     */
    public function setExpires($var)
    {
        GPBUtil::checkInt32($var);
        $this->expires = $var;

        return $this;
    }

    /**
     * The extended attributes of the Peer
     *
     * Generated from protobuf field <code>.google.protobuf.Struct extended = 14 [json_name = "extended"];</code>
     *
     * @return \Google\Protobuf\Struct|null
     */
    public function getExtended()
    {
        return $this->extended;
    }

    public function hasExtended()
    {
        return isset($this->extended);
    }

    public function clearExtended()
    {
        unset($this->extended);
    }

    /**
     * The extended attributes of the Peer
     *
     * Generated from protobuf field <code>.google.protobuf.Struct extended = 14 [json_name = "extended"];</code>
     *
     * @param  \Google\Protobuf\Struct $var
     * @return $this
     */
    public function setExtended($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Struct::class);
        $this->extended = $var;

        return $this;
    }
}
